@model JazMax.Web.ViewModel.UserAccountView.CoreUserView
@using JazMax.Core.SystemHelpers
@{
    ViewBag.Title = "Capture Agent";
}

<h2>Capture Agent</h2>

<div id="createUserForm">



    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IDNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IDNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IDNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CellPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CellPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CellPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GenderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GenderId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
            @Html.LabelFor(model => model.CoreUserTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CoreUserTypeId, JazMaxDropDownList.GetUserTypes(), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CoreUserTypeId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div id="hidPA" hidden>
            <div class="form-group">
                @Html.LabelFor(model => model.CapturePAView.provinceId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CapturePAView.provinceId, JazMaxDropDownList.GetProvinceNotAssigned(), new { htmlAttributes = new { @class = "form-control", id = "dropPro" } })
                    @Html.ValidationMessageFor(model => model.CapturePAView.provinceId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @*<div id="hidTeamLeader" hidden>
            <div class="form-group">
                @Html.LabelFor(model => model.CaptureTeamLeader.provinceId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CaptureTeamLeader.provinceId, JazMaxDropDownList.GetAllProvince(), new
               {
                   htmlAttributes = new { @class = "form-control etc" }
               })
                    @Html.ValidationMessageFor(model => model.CaptureTeamLeader.provinceId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @*<div id="hidAgent" hidden>
            <div class="form-group">
                @Html.LabelFor(model => model.CaptureAgent.BranchId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div id="dropBranch"></div>
                    @Html.ValidationMessageFor(model => model.CaptureAgent.BranchId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="Save" type="button" class="btn btn-default" value="Save" onclick="save();" />
            </div>
        </div>
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>

<script>
    function save()
    {
        $.ajax({
            type: 'Post',
            dataType: 'Json',
            data: {
                FirstName: $('#FirstName').val(),
                MiddleName: $('#MiddleName').val(),
                LastName: $('#LastName').val(),
                IDNumber: $('#IDNumber').val(),
                PhoneNumber: $('#PhoneNumber').val(),
                CellPhone: $('#CellPhone').val(),
                EmailAddress: $('#EmailAddress').val(),
                GenderId: $('#GenderId').val(),

                CoreUserTypeId: $('#CoreUserTypeId').val(),
                CapturePAView_provinceId: $('#CapturePAView_provinceId').val(),
                CaptureTeamLeader_provinceId: $('#CaptureTeamLeader_provinceId').val(),
                dropBranch: $('#ddlBranch').val(),



            },
            url: '@Url.Action("SaveAgent", "User")',
            success: function (da)
            {
                if (da.Result == "Success")
                {
                    alert('saved sucessfully')
                    //$('#createDiv').fadeOut();
                    //$("#createDiv").fadeOut("slow");
                    //$("#createDiv").fadeOut(3000);

                    //$('#showList').fadeIn();
                    //$("#showList").fadeIn("slow");
                    //$("#showList").fadeIn(3000);


                }
                else
                {

                    alert('Error' + da.Message);
                }
            },
            error: function (da) {
                alert('Error');
            }
        });
    }

</script>



@*TO DO: Add Validation!*@